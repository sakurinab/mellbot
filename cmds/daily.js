const Discord = require('discord.js');
const fs = require('fs');
const derabbit = require('../package.json');
const config = require('../botconfig.json');
//mongoose
const mongoose = require('mongoose');
const profileModel = require('../schemas/profileSchema.js');
const dailyModel = require('../schemas/dailySchema.js');
const invModel = require('../schemas/inventorySchema.js');

module.exports.run = async (bot, message, args) => {
    try {
        
        let uid = message.author.id;

        dailyData = await dailyModel.findOne({
            userID: uid
        });
        if (!dailyData) {
            daily = await dailyModel.create({
                userID: uid,
                timeout: 0,
                dailysget: 0,
                lastdaily: 0,
                weekdaily: 1,
            });
            //—Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç–∞
            daily.save();
        }

        profileData = await profileModel.findOne({
            userID: uid
        });
        let userCoins = profileData.silverCoins;
        let userLvl = profileData.lvl;
        dailyData = await dailyModel.findOne({
            userID: uid
        });
        let userTimeOut = parseInt(dailyData.timeout);
        let userLastdaily = dailyData.lastdaily;
        let userDailys = dailyData.dailysget;
        let dayof = dailyData.weekdaily;

        let rUser = message.author;
        let timeOut = (43200000 - (Date.now() - userTimeOut));
        const seconds = Math.floor((timeOut / 1000) % 60);
        const minutes = Math.floor((timeOut / 1000 / 60) % 60);
        const hours = Math.floor((timeOut / 1000 / 60 / 60) % 24);

        if ((Date.now() - userTimeOut > 43200000)) {
            if ((Date.now() - userLastdaily) > 86400000) {
                dailyData = await dailyModel.updateOne({
                    userID: uid,
                }, {
                    dailysget: 0,
                    weekdaily: 1
                });
            }
            if (dayof > 7) {
                dailyData = await dailyModel.updateOne({
                    userID: uid,
                }, {
                    $inc: {
                        dailysget: 1,
                    },
                    $set: {
                        timeout: Date.now(),
                        lastdaily: Date.now(),
                        weekdaily: 1,
                    }
                });
                dayof = 1;
            } else {
                dailyData = await dailyModel.updateOne({
                    userID: uid,
                }, {
                    $inc: {
                        dailysget: 1,
                        weekdaily: 1
                    },
                    $set: {
                        timeout: Date.now(),
                        lastdaily: Date.now()
                    }
                });
            }

            let dailyReward = 60 + (20 * (userDailys + 1));
            let oneXp = Math.floor((100 * userLvl) / 100)

            let dailyEmbed = new Discord.MessageEmbed()
                .setColor(`${config.defaultColor}`)
                .setTitle(`–í—Ä–µ–º–µ–Ω–Ω—ã–µ –Ω–∞–≥—Ä–∞–¥—ã`)
                .setFooter(`${rUser.username}`, `${rUser.displayAvatarURL({dynamic: true})}`)
                .setTimestamp();

            if (dayof >= 0) {
                dailyEmbed.setDescription(`${rUser}, –í—ã –∑–∞–±—Ä–∞–ª–∏ —Å–≤–æ–∏ ${dailyReward} ${config.silverCoin}! –í–æ–∑–≤—Ä–∞—â–∞–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ 12 —á–∞—Å–æ–≤`);
                profileData = await profileModel.updateOne({
                    userID: uid,
                }, {
                    $inc: {
                        silverCoins: dailyReward,
                    }
                });
                //–∑–Ω–∞–∫ –æ—Ç–ª–∏—á–∏—è
                profileData = await profileModel.findOne({
                    userID: uid
                });
                let achieve = profileData.achievements;
                const exclsName = `"–ß–∞—Å—Ç—ã–π –≥–æ—Å—Ç—å"`;
                const exclsEmoji = "üê∞";

                let newExclsEmbed = new Discord.MessageEmbed()
                    .setColor(`${config.defaultColor}`)
                    .setTitle(`‚∏ù‚∏ù ‚ô°‚ÇäÀö ${rUser.username} –ø–æ–ª—É—á–∞–µ—Ç –∑–Ω–∞–∫ –æ—Ç–ª–∏—á–∏—è ${exclsEmoji}!‚óû`)
                    .setDescription(`${rUser} –ø–æ–ª—É—á–∏–ª –Ω–æ–≤—ã–π –∑–Ω–∞–∫ –æ—Ç–ª–∏—á–∏—è **${exclsName}**!`)
                    .setFooter(`${rUser.username}`, `${rUser.displayAvatarURL({dynamic: true})}`)
                    .setTimestamp();

                achieveNew = achieve.toString();
                if (!(achieveNew.indexOf(exclsEmoji) > -1)) {
                    achieveNew = achieveNew + exclsEmoji + " ";
                    profileData = await profileModel.updateOne({
                        userID: uid,
                    }, {
                        achievements: achieveNew,
                    });
                    let exclsGet = new Discord.MessageEmbed()
                        .setColor(`${config.defaultColor}`)
                        .setTitle("‚∏ù‚∏ù ‚ô°‚ÇäÀö –ó–Ω–∞–∫ –æ—Ç–ª–∏—á–∏—è –ø–æ–ª—É—á–µ–Ω!‚óû")
                        .setDescription(`–í—ã –ø–æ–ª—É—á–∏–ª–∏ –Ω–æ–≤—ã–π –∑–Ω–∞–∫ –æ—Ç–ª–∏—á–∏—è **${exclsName}**!\n–í–∞—à–∏ –∑–Ω–∞—á–∫–∏: ${achieveNew}`)
                        .setTimestamp();

                    //bot.users.cache.get(rUser.id).send(exclsGet);
                    //bot.channels.cache.get(config.mainChannel).send(newExclsEmbed);
                }
            }

            message.channel.send(dailyEmbed);
        } else {
            let dailyEmbedErr = new Discord.MessageEmbed()
                .setColor(`${config.errColor}`)
                .setTitle("–í—Ä–µ–º–µ–Ω–Ω–∞—è –Ω–∞–≥—Ä–∞–¥–∞")
                .setThumbnail(`${rUser.displayAvatarURL({dynamic: true})}`)
                .setDescription(`${rUser}, –í—ã —É–∂–µ –∑–∞–±—Ä–∞–ª–∏ –≤—Ä–µ–º–µ–Ω–Ω—É—é –Ω–∞–≥—Ä–∞–¥—É!\n–í—ã –º–æ–∂–µ—Ç–µ –ø–æ–ª—É—á–∏—Ç—å —Å–ª–µ–¥—É—é—â—É—é —á–µ—Ä–µ–∑ **${hours}**—á. **${minutes}**–º. **${seconds}—Å.**`)

            message.channel.send(dailyEmbedErr);
        }
    } catch (err) {
        if (err.name === "ReferenceError")
            console.log("–£ –≤–∞—Å –æ—à–∏–±–∫–∞")
        console.log(`1.${err.name}\n2.${err.message}\n3.${err.stack}`);
    }
};

module.exports.help = {
    name: "–Ω–∞–≥—Ä–∞–¥–∞",
    alias: "timely"
};